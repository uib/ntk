image: docker:stable


# Anchors
.docker_login: &docker_login
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

.build_container_image:
  script:
    - *docker_login
    - cd $dir
    - docker pull $CI_REGISTRY_IMAGE/$image_name:latest || true
    - docker build -f ./$dockerfile --cache-from $CI_REGISTRY_IMAGE/$image_name:latest
      --tag $CI_REGISTRY_IMAGE/$image_name:$CI_COMMIT_SHORT_SHA
      --tag $CI_REGISTRY_IMAGE/$image_name:latest
      --tag $CI_REGISTRY_IMAGE/$image_name:test
      .
    - docker push $CI_REGISTRY_IMAGE/$image_name:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE/$image_name:latest
    - docker push $CI_REGISTRY_IMAGE/$image_name:test

.promote:
  script:
    - *docker_login
    - docker pull $CI_REGISTRY_IMAGE/$image_name:$existing_tag
    - docker tag $CI_REGISTRY_IMAGE/$image_name:$existing_tag $CI_REGISTRY_IMAGE/$image_name:$new_tag
    - docker push $CI_REGISTRY_IMAGE/$image_name:$new_tag

.security_scan:
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - apk add --no-cache curl docker-cli
    - curl -sSL -o /tmp/trivy-gitlab.tpl https://github.com/aquasecurity/trivy/raw/main/contrib/gitlab.tpl
    - *docker_login
    - trivy image --clear-cache
    - docker pull $CI_REGISTRY_IMAGE/$image_name:$image_tag
    - trivy image --exit-code 0 --no-progress --severity "UNKNOWN,HIGH,CRITICAL" --format template --template "@/tmp/trivy-gitlab.tpl" -o gl-container-scanning-report.json $CI_REGISTRY_IMAGE/$image_name:$image_tag
    - trivy image --exit-code 0 --no-progress --severity "UNKNOWN,HIGH,CRITICAL" -o gl-container-scanning-report.txt $CI_REGISTRY_IMAGE/$image_name:$image_tag
    - trivy image --exit-code 0 --no-progress --severity "UNKNOWN,HIGH,CRITICAL" $CI_REGISTRY_IMAGE/$image_name:$image_tag
    - trivy --quiet image --exit-code $exit_code_when_found --no-progress --severity CRITICAL $CI_REGISTRY_IMAGE/$image_name:$image_tag >/dev/null
  artifacts:
    paths:
      - gl-container-scanning-report.json
      - gl-container-scanning-report.txt




# Stages
stages:
- build
- deploy

build_container:
  stage: build
  variables:
    dir: .
    image_name: ntk
    dockerfile: Dockerfile
  extends:
    - .build_container_image

promote_prod:
  stage: deploy
  variables:
    image_name: ntk
    existing_tag: $CI_COMMIT_SHORT_SHA
  before_script:
    - apk add git
    - new_tag=$(git describe --tags | tr "-" "." | cut -d "." -f1-3 | grep "[0-9]\.[0-9]\.[0-9]" || echo "$(git describe --tags).0")
    - echo "Existing tag is $existing_tag, new tag is $new_tag"
  extends:
    - .promote
  needs:
    - build_container
  #when: manual
  #manual_confirmation: "Do you want to tag this for deployment for prod?"
